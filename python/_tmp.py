N = 18974131303606517108116779221394983351107953418674246808002046468756695163654887691911576186421805200250724321568280195905290442205232517227748969364090141063128939314878515317496341421052786397637775756920934374402845581351369492477771453093640094024467419280993344938852728756640716156565675517813218333062731827741326761259969868455874961692512448497903630657495966824453734032513674207164780712696722182628908402340122033085935890252243199482816629275286868697072041774808266299597266915191885557647884902011866719857934046712299602699100891310652940496655959481394816839239749563560927325844243871359449301928659
#gift = (P^Q)>>400
gift = 81616793159567136422389758585591940662857576283302867011800445277592420866836093507411736040996742950676922327919824777893118631113867500244368612517429678572193116622664051815861481500355863477109385340706136160893878015686817479333596425572252594901263332045777914789662665019123717287533930696370434650226 >> 400
gift <<=400
 
PR.<x> = PolynomialRing(Zmod(N))
ok = False
def pq_xor(tp,tq,idx):
    global ok 
    
    if ok:
        return 
    if tp*tq>N:
        return 
    if (tp+(2<<idx))*(tq+(2<<idx))<N:
        return 
        
    if idx<=400:
        try:
            f = tp + x 
            rr = f.monic().small_roots(X=2^400, beta=0.4)
            if rr != []:
                print(rr)
                print(tp)
                print('p = ',f(rr[0]))
                ok = True
                return
        except:
            pass
        
        return
    
    idx -=1
    b = (gift >>idx)&1
    one = 1<<idx 
    if b==0:
        pq_xor(tp,tq,idx)    
        pq_xor(tp+one,tq+one,idx)    
    else:   #1
        pq_xor(tp+one,tq,idx)
        pq_xor(tp,tq+one,idx)
    
 
#N.nbits()=2048 gift.nbits()=1023  p,q的1024位为1
tp = 1<<1023
tq = 1<<1023
pq_xor(tp,tq,1023)