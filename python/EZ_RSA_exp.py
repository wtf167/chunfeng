#!/usr/bin/python3
# coding:utf-8

import gmpy2
import sympy
from Crypto.Util.number import long_to_bytes


'''
p=(11x+a)
q=(23x+b)
11*p*23*q = 
'''
n = 7099293997597057840121358666833837753498838275854020154482887743106000287292796543920866875062689995360025217485874831332257233130287943206444475190268445255670322843664471682348256156185175655765790452094332875022809494407318056044647005041845654843080303742522260061500210481600297956451426162674923926908156645992521694195572818623774054219194331159529364179241757932761459930262573830738911713799216140111007655256112125121081747854267340976432923900792983659847629430766080521995039114172477341269935779097804051557556063477903826454634581880779164839924381664510909546228996769947966559112620828323435423467787739
c = 3078278882403267771557339568388950410639470501469121937324913253244013904986826470346335611174822666010160930623609201021876295254455820936788078951586549877513565571795083091146694885452347963070384765951180432581796819616400782006993357703440486783144989291310259039645268226860339316323226395210408787702054635889745582356633806087632054473023928020827581196829103923740718937874920893533975613493768492615364149440810394033176498488161704634307874672531940341631965894022899665283833912182388412943227149695408964841000543086601596551360786212024360389301448828142199899595307482885969343432562999657817232668321784
e = 57742
n1 = n * 11 * 23
n2 = gmpy2.iroot(n1, 2)[0] // 11
n2 = n2 * 11
print(gmpy2.gcd(n2, 11))
while 1:
    if gmpy2.gcd(n1, n2) > 253:
        p = gmpy2.gcd(n1, n2) // 11
        q = n // p
        break
    n2 -= 11
assert(p * q == n)
phi = (p-1) * (q-1)
print(gmpy2.gcd(e, phi))
d = gmpy2.invert(e//2, phi)
m = gmpy2.powmod(c, d, n)
print(long_to_bytes(gmpy2.iroot(m, 2)[0]))
